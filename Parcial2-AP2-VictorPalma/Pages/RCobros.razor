@page "/Cobros"
@page "/Cobros/{CobroId:int}"

@inject IToastService toast

<EditForm Model="Cobro" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro Cobro</h3>
        </div>

        <div class="card-body">
            <form>
                <div class="row align-items-center">
                    <div class="col">
                        <div class="form-group row">
                            <label class="col-sm-1 col-form-label">Id</label>
                            <div class="input-group col-sm-10">
                                <InputNumber @bind-Value="this.CobroId" class="form-control" />
                                <div class="input-group-append">
                                    <button type="button" style="z-index:0" class="btn btn-secondary" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col">
                        <div class="form-group row">
                            <label class="col-form-label">Fecha</label>

                            <div class="col-sm-9">
                                <InputDate @bind-Value="Cobro.Fecha" class="form-control" />
                            </div>

                        </div>
                    </div>

                </div>
                <br />
                <div class="form-group row ">
                    <label class="col-form-label">Cliente</label>
                    <div class="col-sm-11">
                        <select @bind="Cobro.ClienteId" @onclick="SourceTable" class="form-control">
                            @foreach (var item in listaCliente)
                            {
                                <option value="@item.ClienteId">@item.Nombres</option>
                            }

                        </select>
                    </div>
                </div>

            </form>
        </div>

        <div class="card">
            <div class="card-header bg-info">
                <h5 class="text-white">Facturas Pendientes</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive text-nowrap" style="position: relative; height:200px; overflow: auto; display: block;">
                    <table class="table table-striped">
                        <thead class="thead-light">
                            <tr>
                                <th>Id</th>
                                <th>Fecha</th>
                                <th>Monto</th>
                                <th>Balance</th>
                                <th>Cobrado</th>
                                <th>Pagar</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white">
                            @foreach (var item in listaFactura)
                            {
                                <tr>
                                    <td>@item.VentaId</td>
                                    <td>@item.Fecha</td>
                                    <td>@item.Monto</td>
                                    <td>@item.Balance</td>
                                    <td>@item.VentaId</td>
                                    <td><InputCheckbox @bind-Value="item.IsCobrado" @onclick="() => Cotejo(item)" class="form-check" /></td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>

                <div class="row align-items-center">
                    <div class="col">
                        <div class="form-group row m-1">
                            <label class="col-form-label">Conteo</label>
                            <div class="input-group col-sm-3">
                                <InputNumber @bind-Value="Cobro.Conteo" readonly class="form-control" />
                            </div>
                        </div>
                    </div>

                    <div class="col">
                        <div class="form-group row">
                            <label class="col-form-label">Total Cobrado</label>

                            <div class="col-sm-3">
                                <InputNumber @bind-Value="Cobro.TotalCobrado" readonly class="form-control" />
                            </div>

                        </div>
                    </div>

                </div>

                <div class="border-info">
                    <h5>Observaciones</h5>
                    <InputTextArea @bind-Value="Cobro.Observaciones" class="form-control" />
                </div>

            </div>

        </div>

        <div class="card-footer">
            <div class="form-group text-center">
                <button type="button" class="btn btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-success">Guardar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>



@code {
    [Parameter]
    public int CobroId { get; set; }

    [Inject]
    public ClientesBLL clientesBLL { get; set; }

    [Inject]
    public VentasBLL ventasBLL { get; set; }

    private Cobros Cobro = new Cobros();
    private List<Clientes> listaCliente = new List<Clientes>();


    List<Ventas> listaFactura = new List<Ventas>();

    protected async override Task OnInitializedAsync()
    {
        listaCliente = await clientesBLL.GetList(c => true);
    }

    private void Nuevo()
    {

    }

    private void Buscar()
    {

    }

    private void Guardar()
    {

    }

    private void Eliminar()
    {

    }

    private async void SourceTable()
    {
        if (Cobro.ClienteId == 0) { return; }
        Cobro.Conteo = 0;
        listaFactura = await ventasBLL.GetList(v => v.ClienteId == Cobro.ClienteId);

        foreach (var item in listaFactura)
        {
            if (item.IsCobrado == false)
                Cobro.Conteo++;
        }
    }

    private void Cotejo(Ventas venta)
    {
        if (venta.IsCobrado == false)
        {
            Cobro.TotalCobrado += venta.Balance;
        }
        else
        {
            Cobro.TotalCobrado -= venta.Balance;
        }
    }
}
